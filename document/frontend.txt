Fetch will start at n cycle after reset release.

Booting address is configurable by "usingOuterBootAddr" "bootAddrParam".

Flush happens when 
- exception
- jump
- eret instruction
- CSR RW (for certain registers)

Next PC calculation
Jump instruction such as BR, JAL, JALR are decoded from decoder.
If instruction is jump, then flush all pipelines, fetch queue and instruction buffer.
Frontend calculates branch address, else ALU calculates jump address.

Fetch Queue
Fetch queue is where fetched instructions are located.
It resets when flush should happen.
Fetch queue sends request to program memory and receives ack signal as response.
If fq must enqueue every requests it has issued, which means every responses from program memory should not be ignored by fq.
Fetch queue can send request only when fetch counter does not block "fqNotFull".

Fetch Counter 
Fetch counter calculates how much entries fq currently have.
Counter starts with a value of  "fetchqueueEntries-1".
It increases when fq enqueue happens, and decreases when fq dequeue happens.
When both happens simultaneously, the number of empty fetch queue entry does not changes.

When exception happens, fetch queue will issue only one request until it receives response of that one.
So when exception request is on the way, fetch is blocked.

Program memory request
Fetch queue requests to program memory in such way -
For address, fetch PC,
For request, fetch signal,
For flush, I$ flush signal not fetch queue flush signal,
For command, integer load command.

Program memory response
Program memory responses to fetch queue with data, exception flags, and acknowledge signals.

Fetch PC
Fetch PC is address which fetch queue requests.
When booting, booting address is requested.
When jump, jump PC is requested.
When exception or eret happens, exception vector address is requested.
When CSR RW happens, current IE stage PC + 4 is requested, for csr rw instructions are all 32-bit instruction.
When fetch is available, current fetch PC + 4 is requested.
*All requests are 4 bytes aligned

Kill
Kill signal will be issued when flush signal asserts.
It is assumed that all requests before kill signal are discarded from program memory.
*In this case, do we need fetch counter? Maybe.

